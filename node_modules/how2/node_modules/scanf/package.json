{
  "name": "scanf",
  "version": "0.7.0",
  "description": "C like scanf/sscanf module for node.js.",
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha ./tests"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Lellansin/node-scanf.git"
  },
  "keywords": [
    "scanf",
    "sscanf",
    "readSync from stdin",
    "shell input"
  ],
  "author": {
    "name": "Lellansin"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Lellansin/node-scanf/issues"
  },
  "homepage": "https://github.com/Lellansin/node-scanf",
  "devDependencies": {
    "mocha": "^2.2.4",
    "should": "^6.0.1"
  },
  "readme": "# node-scanf [![NPM Version](https://badge.fury.io/js/scanf.svg)](http://badge.fury.io/js/scanf) [![Build Status](https://travis-ci.org/Lellansin/node-scanf.png?branch=master)](https://travis-ci.org/Lellansin/node-scanf)\r\n\r\nDo you want simplely shell script input which have formats and sync return?\r\n\r\nDo you want a sscanf like function to parse format strings?\r\n\r\n`scanf` is a C like scanf module for node.js which can help you with that.\r\n\r\n## Documentation\r\n\r\n*  [`Example`](#Example)\r\n  *  [`Quickly start`](#quickly-start)\r\n  *  [`C like format`](#c-like-format)\r\n*  [`Return`](#return)\r\n  *  [`Directly return`](#directly-return)\r\n  *  [`Array return`](#array-return)\r\n  *  [`Json return`](#json-return)\r\n*  [`sscanf`](#sscanf)\r\n\r\n## Installation\r\n```\r\nnpm install scanf\r\n```\r\n\r\n## Format support now\r\n\r\n* `%d` - integer\r\n* `%f` - float\r\n* `%s` - string\r\n* `%S` - string of line\r\n* `%x` - hex\r\n* `%o` - octal\r\n\r\n## Example\r\n\r\n### Quickly start\r\n```javascript\r\nvar scanf = require('scanf');\r\n\r\nconsole.log('Pleas input your name');\r\nvar name = scanf('%s');\r\n\r\nconsole.log('Pleas input your age');\r\nvar age = scanf('%d');\r\n\r\nconsole.log('your name [%s] type: [%s]', name, typeof name);\r\nconsole.log('your age [%s] type: [%s]', age, typeof age);\r\n```\r\n\r\nREPL\r\n\r\n```\r\nPleas input your name\r\n> Barack\\ Obama\r\nPleas input your age\r\n> 24\r\nyour name [Barack Obama] type: [string]\r\nyour age [24] type: [number]\r\n```\r\n\r\n\r\n### C like format\r\n```javascript\r\nvar scanf = require('scanf');\r\n\r\nconsole.log('when are you born? \\(Year-month-day\\)');\r\nvar date = scanf('%d-%d-%d');\r\n\r\nconsole.log('your birthday [%s]', date);\r\n```\r\n\r\nREPL\r\n\r\n```\r\nwhen are you born? (Year-month-day)\r\n> 1990-01-01\r\nyour birthday [1990,1,1]\r\n```\r\n\r\n## Return\r\n\r\n### Directly return\r\n\r\n```javascript\r\nvar scanf = require('scanf');\r\n\r\nvar number = scanf('%d');\r\n\r\nconsole.log('number', number);\r\n```\r\n\r\nREPL\r\n\r\n```\r\n>> 2015    \r\nnumber 2015\r\n```\r\n\r\n### Array return\r\n\r\n```javascript\r\nvar scanf = require('scanf');\r\n\r\nvar result = scanf('%s%d%d');\r\n\r\nconsole.log('result', result);\r\n```\r\n\r\nREPL\r\n\r\n```\r\n>> Alan 24 180        \r\nresult [ 'Alan', 24, 180 ]\r\n```\r\n\r\n### Json return\r\n\r\n```javascript\r\nvar scanf = require('scanf');\r\n\r\nvar result = scanf('%d %f %s %x %o', 'integer', 'float', 'string', 'hex', 'octal');\r\n\r\nconsole.log('result', result);\r\n```\r\n\r\nREPL\r\n\r\n```\r\n>> 12 3.1415926 hello 1F 10    \r\nresult { \r\n  integer: 12,\r\n  float: 3.1415926,\r\n  string: 'hello',\r\n  hex: 31,\r\n  octal: 8 \r\n}\r\n```\r\n\r\n## sscanf\r\n\r\nREPL\r\n\r\n```javascript\r\n>> var sscanf = require('scanf').sscanf;\r\nundefined\r\n>> sscanf('12 34', '%d');\r\n12\r\n>> sscanf('Alan 20 180', '%s%d%d')\r\n[ 'Alan', 20, 180 ]\r\n>> sscanf('12 3.1415926 hello', '%d %f %s', 'month', 'pi', 'world');\r\n{ month: 12, pi: 3.1415926, world: 'hello' }\r\n>> sscanf('   14   ??  Ss     0:07.59 /usr/sbin/securityd -i', '%d %s %s %s %s %s', 'pid', 'tty', 'stat', 'time', 'exec', 'param');\r\n{ pid: 14,\r\n  tty: '??',\r\n  stat: 'Ss',\r\n  time: '0:07.59',\r\n  exec: '/usr/sbin/securityd',\r\n  param: '-i' }\r\n```\r\n\r\nyou can see the ./tests files for more detail.\r\n\r\nIf there are some formats not support or go broken, you can contact author with email `lellansin@gmail.com`.\r\n",
  "readmeFilename": "README.md",
  "_id": "scanf@0.7.0",
  "dist": {
    "shasum": "f7c41a873f336da673e938d52e2ff88eb097e95f"
  },
  "_from": "scanf@^0.7.0",
  "_resolved": "https://registry.npmjs.org/scanf/-/scanf-0.7.0.tgz"
}
